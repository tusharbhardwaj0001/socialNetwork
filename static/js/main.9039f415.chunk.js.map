{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","target","rel","id","props","account","width","height","src","concat","Identicon","toString","Component","Main","_this","role","style","maxWidth","onSubmit","event","preventDefault","content","postContent","createPost","type","ref","input","placeholder","required","posts","map","post","author","window","web3","utils","fromWei","tipAmount","name","onClick","toWei","console","log","tipPost","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","socialNetwork","postCount","loading","bind","assertThisInitialized","_componentWillMount","asyncToGenerator","_callee","_context","loadWeb3","loadBlockchainData","_loadWeb","_callee2","_context2","ethereum","Web3","enable","currentProvider","alert","_loadBlockchainData","_callee3","accounts","networkId","networkData","_context3","eth","getAccounts","setState","net","getId","SocialNetwork","networks","Contract","abi","address","methods","toConsumableArray","sort","b","_this2","send","from","once","receipt","_this3","components_Navbar","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9039f415.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"http://www.dappuniversity.com/bootcamp\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Dapp University\r\n        </a>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-secondary\">\r\n              <small id=\"account\">{this.props.account}</small>\r\n            </small>\r\n            { this.props.account\r\n              ? <img\r\n                className='ml-2'\r\n                width='30'\r\n                height='30'\r\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n              />\r\n              : <span></span>\r\n            }\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\r\n            <div className=\"content mr-auto ml-auto\">\r\n              <p>&nbsp;</p>\r\n                <form onSubmit={(event) => {\r\n                  event.preventDefault()\r\n                  const content = this.postContent.value\r\n                  this.props.createPost(content)\r\n                }}>\r\n                <div className=\"form-group mr-sm-2\">\r\n                  <input\r\n                    id=\"postContent\"\r\n                    type=\"text\"\r\n                    ref={(input) => { this.postContent = input }}\r\n                    className=\"form-control\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    required />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Share</button>\r\n              </form>\r\n              <p>&nbsp;</p>\r\n              { this.props.posts.map((post, key) => {\r\n                return(\r\n                  <div className=\"card mb-4\" key={key} >\r\n                    <div className=\"card-header\">\r\n                      <img\r\n                        className='mr-2'\r\n                        width='30'\r\n                        height='30'\r\n                        src={`data:image/png;base64,${new Identicon(post.author, 30).toString()}`}\r\n                      />\r\n                      <small className=\"text-muted\">{post.author}</small>\r\n                    </div>\r\n                    <ul id=\"postList\" className=\"list-group list-group-flush\">\r\n                      <li className=\"list-group-item\">\r\n                        <p>{post.content}</p>\r\n                      </li>\r\n                      <li key={key} className=\"list-group-item py-2\">\r\n                        <small className=\"float-left mt-1 text-muted\">\r\n                          TIPS: {window.web3.utils.fromWei(post.tipAmount.toString(), 'Ether')} ETH\r\n                        </small>\r\n                        <button\r\n                          className=\"btn btn-link btn-sm float-right pt-0\"\r\n                          name={post.id}\r\n                          onClick={(event) => {\r\n                            let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\r\n                            console.log(event.target.name, tipAmount)\r\n                            this.props.tipPost(event.target.name, tipAmount)\r\n                          }}\r\n                        >\r\n                          TIP 0.1 ETH\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport Identicon from 'identicon.js';\r\nimport './App.css';\r\nimport SocialNetwork from '../abis/SocialNetwork.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    // Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = SocialNetwork.networks[networkId]\r\n    if(networkData) {\r\n      const socialNetwork = web3.eth.Contract(SocialNetwork.abi, networkData.address)\r\n      this.setState({ socialNetwork })\r\n      const postCount = await socialNetwork.methods.postCount().call()\r\n      this.setState({ postCount })\r\n      // Load Posts\r\n      for (var i = 1; i <= postCount; i++) {\r\n        const post = await socialNetwork.methods.posts(i).call()\r\n        this.setState({\r\n          posts: [...this.state.posts, post]\r\n        })\r\n      }\r\n      // Sort posts. Show highest tipped posts first\r\n      this.setState({\r\n        posts: this.state.posts.sort((a,b) => b.tipAmount - a.tipAmount )\r\n      })\r\n      this.setState({ loading: false})\r\n    } else {\r\n      window.alert('SocialNetwork contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  createPost(content) {\r\n    this.setState({ loading: true })\r\n    this.state.socialNetwork.methods.createPost(content).send({ from: this.state.account })\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  tipPost(id, tipAmount) {\r\n    this.setState({ loading: true })\r\n    this.state.socialNetwork.methods.tipPost(id).send({ from: this.state.account, value: tipAmount })\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      socialNetwork: null,\r\n      postCount: 0,\r\n      posts: [],\r\n      loading: true\r\n    }\r\n\r\n    this.createPost = this.createPost.bind(this)\r\n    this.tipPost = this.tipPost.bind(this)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        { this.state.loading\r\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n          : <Main\r\n              posts={this.state.posts}\r\n              createPost={this.createPost}\r\n              tipPost={this.tipPost}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}